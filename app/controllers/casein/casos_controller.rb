# Scaffolding generated by Casein v5.0.0.0

module Casein
  class CasosController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Casos'
  		@casos = Caso.order(sort_order(:casename)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View caso'
      @caso = Caso.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new caso'
    	@caso = Caso.new
    end

    def create
      @caso = Caso.new caso_params
    
      if @caso.save
        flash[:notice] = 'Caso created'
        redirect_to casein_casos_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new caso'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update caso'
      
      @caso = Caso.find params[:id]
    
      if @caso.update_attributes caso_params
        flash[:notice] = 'Caso has been updated'
        redirect_to casein_casos_path
      else
        flash.now[:warning] = 'There were problems when trying to update this caso'
        render :action => :show
      end
    end
 
    def destroy
      @caso = Caso.find params[:id]

      @caso.destroy
      flash[:notice] = 'Caso has been deleted'
      redirect_to casein_casos_path
    end
  
    private
      
      def caso_params
        params.require(:caso).permit(:casename, :victname, :date_occu, :place_occu, :desc, :status, :owner)
      end

  end
end